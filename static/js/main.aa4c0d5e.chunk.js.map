{"version":3,"sources":["components/Clock.js","components/buttons/Config.js","components/buttons/PlayPause.js","components/buttons/Reset.js","components/buttons/ButtonContainer.js","config-modal/CloseButton.js","config-modal/ConfigModal.js","App.js","reportWebVitals.js","index.js"],"names":["Seconds","seconds","minutes","Math","floor","secs","pretty_secs","className","Decimals","decimals","Clock","isPlayerOne","turn","switchPlayers","time","setTime","paused","decrementTime","prevTime","useEffect","interval","setInterval","clearInterval","onClick","Config","PlayPause","icon","Reset","ButtonContainer","onClickPlayPause","onClickSettings","onClickReset","CloseButton","ConfigModal","setActive","initialTime","App","useState","setInitialTime","playerOneTurn","setPlayerOneTurn","setPaused","timeOne","setTimeOne","timeTwo","setTimeTwo","settingsActive","setSettingsActive","currentPlayerOne","configModal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa4c0d5e.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\n\n\nconst Seconds = ({seconds}) => {\n\n    const minutes = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    const pretty_secs = secs < 10 ? '0' + secs : secs\n\n    return (\n        <span className=\"seconds\">{`${minutes}:${pretty_secs}`}</span>\n    )\n}\n\nconst Decimals = ({decimals}) => {\n    return (\n        <span className=\"decimals\">{decimals}</span>\n    )\n}\n\n\nconst Clock = ({isPlayerOne, turn, switchPlayers, time, setTime, paused}) => {\n    const decrementTime = () => {\n        setTime((prevTime) => {\n            if (prevTime <= 0) return 0\n            return prevTime - 1\n        })\n    }\n\n    const getSeconds = () => {\n        return Math.floor(time / 10)\n    }\n    \n    const getDecimals = () => {\n        return time % 10\n    }\n\n    const clickHandler = () =>{\n        if (turn && !paused) switchPlayers();\n    }\n\n    useEffect(() => {\n        let interval;\n        if (turn && !paused && time > 0) {\n            interval = setInterval(decrementTime, 100)\n        }\n        return () => {\n            if (turn) clearInterval(interval)\n        }\n    }, [turn, paused])\n\n    return (\n        <div className={`clock ${isPlayerOne ? 'player-one' : 'player-two'} ${turn && !paused ? 'active' : ''}`}\n            onClick={clickHandler}\n        >\n            <p className=\"clock-text\">\n                <Seconds seconds={getSeconds()} />\n                .\n                <Decimals decimals={getDecimals()} />\n            </p>\n        </div>\n    )\n}\n\nexport default Clock\n","import { IoSettingsSharp } from \"react-icons/io5\"\n\nconst Config = ({ onClick }) => {\n    return (\n        <div className=\"button config-button\" onClick={onClick}>\n            <IoSettingsSharp />\n        </div>\n    )\n}\n\nexport default Config\n","import { IoPause, IoPlay } from \"react-icons/io5\"\n\n\nconst PlayPause = ({paused, onClick}) => {\n\n    let icon = paused ? <IoPlay /> : <IoPause />\n    return (\n        <div className=\"button play-pause-button\" onClick={onClick}>\n            {icon}\n        </div>\n    )\n}\n\nexport default PlayPause","import { IoRefresh } from \"react-icons/io5\"\n\nconst Reset = ({onClick}) => {\n    return (\n        <div className=\"button reset-button\" onClick={onClick}>\n            <IoRefresh  />\n        </div>\n    )\n}\n\nexport default Reset\n","import Config from \"./Config\"\nimport PlayPause from \"./PlayPause\"\nimport Reset from \"./Reset\"\n\nconst ButtonContainer = ({paused, onClickPlayPause, onClickSettings, onClickReset}) => {\n    return (\n        <div className='button-container'>\n            <Config onClick={onClickSettings} />\n            <div className='spacer'></div>\n            <PlayPause onClick={onClickPlayPause} paused={paused}/>\n            <div className='spacer'></div>\n            <Reset onClick={onClickReset}/>\n        </div>\n    )\n}\n\nexport default ButtonContainer\n","import { IoClose } from \"react-icons/io5\"\n\nconst CloseButton = ({ onClick }) => {\n    return (\n        <div className=\"close-config-button\" onClick={onClick}>\n            <IoClose />\n        </div>\n    )\n}\n\nexport default CloseButton\n","import CloseButton from \"./CloseButton\"\n\nconst ConfigModal = ({setActive, initialTime}) => {\n    return (\n        <div className={`modal-base`}> \n            <div className=\"config-window\">\n                <CloseButton onClick={() => setActive(false) }/>\n            </div>\n        </div>\n    )\n}\n\nexport default ConfigModal\n","import Clock from './components/Clock'\nimport { useState } from 'react'\nimport ButtonContainer from './components/buttons/ButtonContainer';\n\nimport './App.css';\nimport ConfigModal from './config-modal/ConfigModal';\n\nconst App = () => {\n\n  const [initialTime, setInitialTime] = useState(9000)\n  const [playerOneTurn, setPlayerOneTurn] = useState(true)\n  const [paused, setPaused] = useState(true)\n  const [timeOne, setTimeOne] = useState(initialTime)\n  const [timeTwo, setTimeTwo] = useState(initialTime)\n\n  const [settingsActive, setSettingsActive] = useState(false)\n\n  const switchPlayers = () => {\n    setPlayerOneTurn((currentPlayerOne) => !currentPlayerOne)\n  }\n\n  const onClickPlayPause = () =>{\n    setPaused(!paused)\n  }\n\n  const onClickSettings = () => {\n    setPaused(true)\n    setSettingsActive(true)\n  }\n\n  const onClickReset = () => {\n    setPaused(true)\n    setPlayerOneTurn(true)\n    setTimeOne(initialTime)\n    setTimeTwo(initialTime)\n  }\n\n  let configModal = null\n  if (settingsActive){\n    configModal = <ConfigModal\n      setActive={setSettingsActive}\n      initialTime={initialTime}\n      setInitialTime={setInitialTime}\n    />\n  }\n\n  return (\n    <div className=\"app-container\">\n      { configModal }\n\n      <Clock\n        turn={!playerOneTurn}\n        isPlayerOne={false}\n        time={timeTwo}\n        setTime={setTimeTwo}\n        initialTime={initialTime}\n        switchPlayers={switchPlayers}\n        paused={paused}\n      />\n      \n      <ButtonContainer\n        paused={paused}\n        onClickSettings={onClickSettings}\n        onClickPlayPause={onClickPlayPause}\n        onClickReset={onClickReset}\n      />\n\n      <Clock\n        turn={playerOneTurn}\n        isPlayerOne={true}\n        time={timeOne}\n        setTime={setTimeOne}\n        switchPlayers={switchPlayers}\n        paused={paused}\n      />\n\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}